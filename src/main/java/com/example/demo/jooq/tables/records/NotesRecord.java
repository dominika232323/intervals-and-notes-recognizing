/*
 * This file is generated by jOOQ.
 */
package com.example.demo.jooq.tables.records;


import com.example.demo.jooq.tables.Notes;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotesRecord extends UpdatableRecordImpl<NotesRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>db.Notes.noteID</code>.
     */
    public void setNoteid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>db.Notes.noteID</code>.
     */
    public Integer getNoteid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>db.Notes.noteName</code>.
     */
    public void setNotename(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>db.Notes.noteName</code>.
     */
    public String getNotename() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Notes.NOTES.NOTEID;
    }

    @Override
    public Field<String> field2() {
        return Notes.NOTES.NOTENAME;
    }

    @Override
    public Integer component1() {
        return getNoteid();
    }

    @Override
    public String component2() {
        return getNotename();
    }

    @Override
    public Integer value1() {
        return getNoteid();
    }

    @Override
    public String value2() {
        return getNotename();
    }

    @Override
    public NotesRecord value1(Integer value) {
        setNoteid(value);
        return this;
    }

    @Override
    public NotesRecord value2(String value) {
        setNotename(value);
        return this;
    }

    @Override
    public NotesRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotesRecord
     */
    public NotesRecord() {
        super(Notes.NOTES);
    }

    /**
     * Create a detached, initialised NotesRecord
     */
    public NotesRecord(Integer noteid, String notename) {
        super(Notes.NOTES);

        setNoteid(noteid);
        setNotename(notename);
    }
}
