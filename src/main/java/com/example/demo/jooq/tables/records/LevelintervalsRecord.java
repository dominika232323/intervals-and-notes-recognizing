/*
 * This file is generated by jOOQ.
 */
package com.example.demo.jooq.tables.records;


import com.example.demo.jooq.tables.Levelintervals;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LevelintervalsRecord extends UpdatableRecordImpl<LevelintervalsRecord> implements Record7<Integer, Integer, String, Integer, Byte, Byte, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>db.LevelIntervals.levelID</code>.
     */
    public void setLevelid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>db.LevelIntervals.levelID</code>.
     */
    public Integer getLevelid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>db.LevelIntervals.userID</code>.
     */
    public void setUserid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>db.LevelIntervals.userID</code>.
     */
    public Integer getUserid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>db.LevelIntervals.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>db.LevelIntervals.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>db.LevelIntervals.numberOfRepetitions</code>.
     */
    public void setNumberofrepetitions(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>db.LevelIntervals.numberOfRepetitions</code>.
     */
    public Integer getNumberofrepetitions() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>db.LevelIntervals.up</code>.
     */
    public void setUp(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>db.LevelIntervals.up</code>.
     */
    public Byte getUp() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>db.LevelIntervals.together</code>.
     */
    public void setTogether(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>db.LevelIntervals.together</code>.
     */
    public Byte getTogether() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>db.LevelIntervals.down</code>.
     */
    public void setDown(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>db.LevelIntervals.down</code>.
     */
    public Byte getDown() {
        return (Byte) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, String, Integer, Byte, Byte, Byte> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, String, Integer, Byte, Byte, Byte> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Levelintervals.LEVELINTERVALS.LEVELID;
    }

    @Override
    public Field<Integer> field2() {
        return Levelintervals.LEVELINTERVALS.USERID;
    }

    @Override
    public Field<String> field3() {
        return Levelintervals.LEVELINTERVALS.NAME;
    }

    @Override
    public Field<Integer> field4() {
        return Levelintervals.LEVELINTERVALS.NUMBEROFREPETITIONS;
    }

    @Override
    public Field<Byte> field5() {
        return Levelintervals.LEVELINTERVALS.UP;
    }

    @Override
    public Field<Byte> field6() {
        return Levelintervals.LEVELINTERVALS.TOGETHER;
    }

    @Override
    public Field<Byte> field7() {
        return Levelintervals.LEVELINTERVALS.DOWN;
    }

    @Override
    public Integer component1() {
        return getLevelid();
    }

    @Override
    public Integer component2() {
        return getUserid();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer component4() {
        return getNumberofrepetitions();
    }

    @Override
    public Byte component5() {
        return getUp();
    }

    @Override
    public Byte component6() {
        return getTogether();
    }

    @Override
    public Byte component7() {
        return getDown();
    }

    @Override
    public Integer value1() {
        return getLevelid();
    }

    @Override
    public Integer value2() {
        return getUserid();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Integer value4() {
        return getNumberofrepetitions();
    }

    @Override
    public Byte value5() {
        return getUp();
    }

    @Override
    public Byte value6() {
        return getTogether();
    }

    @Override
    public Byte value7() {
        return getDown();
    }

    @Override
    public LevelintervalsRecord value1(Integer value) {
        setLevelid(value);
        return this;
    }

    @Override
    public LevelintervalsRecord value2(Integer value) {
        setUserid(value);
        return this;
    }

    @Override
    public LevelintervalsRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public LevelintervalsRecord value4(Integer value) {
        setNumberofrepetitions(value);
        return this;
    }

    @Override
    public LevelintervalsRecord value5(Byte value) {
        setUp(value);
        return this;
    }

    @Override
    public LevelintervalsRecord value6(Byte value) {
        setTogether(value);
        return this;
    }

    @Override
    public LevelintervalsRecord value7(Byte value) {
        setDown(value);
        return this;
    }

    @Override
    public LevelintervalsRecord values(Integer value1, Integer value2, String value3, Integer value4, Byte value5, Byte value6, Byte value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LevelintervalsRecord
     */
    public LevelintervalsRecord() {
        super(Levelintervals.LEVELINTERVALS);
    }

    /**
     * Create a detached, initialised LevelintervalsRecord
     */
    public LevelintervalsRecord(Integer levelid, Integer userid, String name, Integer numberofrepetitions, Byte up, Byte together, Byte down) {
        super(Levelintervals.LEVELINTERVALS);

        setLevelid(levelid);
        setUserid(userid);
        setName(name);
        setNumberofrepetitions(numberofrepetitions);
        setUp(up);
        setTogether(together);
        setDown(down);
    }
}
